#define NinetyDegTurn 700

#define ULTRASONIC IN_4

#define TRESHOLD_F 10
#define blockDis 15

#define TRESHOLD_SIDE_MIN 12
#define TRESHOLD_SIDE_MAX 20
#define TURNRATIO 850
#define ONE_BLOCK 1600


int TURN_PCT_ADJUSTED = 0;

byte sensorForward = 0;
byte sensorRight = 0;
byte sensorLeft = 0;

int numberOfSteps = 0;


task rightTurnL()
{
     RotateMotor(OUT_B, 80, TURNRATIO);
}

task rightTurnR()
{
     RotateMotor(OUT_C, -80, TURNRATIO);
}

task leftTurnL()
{
     RotateMotor(OUT_B, -80, TURNRATIO);
}

task leftTurnR()
{
     RotateMotor(OUT_C, 80, TURNRATIO);
}

void driveForward()
{
    OnFwdSyncPID(OUT_BC, -80, TURN_PCT_ADJUSTED, 30, 50, 90); // jed dopredu
}

task numout()     // vypise ciselnou hodnotu
{
     while(1)
     {
      Wait(20);
      ClearScreen();
      NumOut(0, 0, SensorUS(ULTRASONIC));
     }
}

int drivenBlock = 1;

task main()      // hlavni vlakno, odsud se ridi vse

{
     SetSensorUltrasonic(ULTRASONIC);
     //StartTask(numout);



     int startingRotation = MotorRotationCount(OUT_C);   // inicializace

     while(1)
     {
             //the ultrasonic sensor needs time to read the values
             //that is why we have the 20 millisecond wait

             Wait(20);

             if(SensorUS(ULTRASONIC) < TRESHOLD_F || (drivenBlock % 3) == 0){

                  OffEx(OUT_BC, RESET_ALL);

                    StartTask(leftTurnL);
                    StartTask(leftTurnR);
                    Wait(2100);
                    startingRotation = MotorRotationCount(OUT_C);




             }

             else {

                  driveForward();

                  }

             if ((-1)*MotorRotationCount(OUT_C) > startingRotation + ONE_BLOCK)
             {
              //OffEx(OUT_BC, RESET_ALL);
              drivenBlock += 1;
              startingRotation = MotorRotationCount(OUT_C);
             }
      }

}


